/* 기본 아이디어:
 행렬의 곱셈은 앞 행렬의 열의 개수와 뒤 행렬의 행의 개수가 동일해야한다 -> 앞뒤 열행 개수가 꼬리에 꼬리를 물면 됨
 스칼라 곱셈 횟수는 C=AB이고, A=p*q B=q*r일때 C=p*r라면 p*q*r번이다
 n개의 연속된 행렬이 존재할 때 최소의 스칼라 곱셉 횟수를 갖는 곱셈순서 찾기
 중첩된 부분문제 존재(부분문제에서 최적해를 갖는 곱셈순서가 고정되있는 경우) -> 동적알고리즘 사용
 모든 경우의 수는 Mi~Mj까지 존재할 때 j-i개 존재하고, 그 가운데 최적의 조건 한가지를 찾는 것
 횟수 기본 아이디어 = 최소 스칼라 곱셈횟수가 S(i, j)일때  S(i, k) + S(k, j) + Ci * Ck * Cj(p*q*r과 비슷)), S(i, i) = 0(단일행렬이므로)
*/

#include <iostream>
